/*
 * File: app/view/filter/eventlog.js
 *
 * This file was generated by Sencha Architect version 4.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('EventLog.view.filter.eventlog', {
    extend: 'Ext.window.Window',
    alias: 'widget.eventlog',

    requires: [
        'EventLog.view.filter.eventlogViewModel',
        'EventLog.view.filter.eventlogViewController',
        'Ext.form.field.Date',
        'Ext.form.field.ComboBox',
        'Ext.form.field.TextArea',
        'Ext.form.Label',
        'Ext.form.field.Checkbox',
        'Ext.form.CheckboxGroup',
        'Ext.button.Button'
    ],

    controller: 'filter.eventlog',
    viewModel: {
        type: 'eventlog'
    },
    height: 580,
    itemId: 'filterPanel',
    width: 900,
    closable: true,
    closeAction: 'hide',
    title: '{{Event log filter}}',
    titleAlign: 'center',
    defaultListenerScope: true,

    layout: {
        type: 'vbox',
        align: 'stretch',
        pack: 'end'
    },
    items: [
        {
            xtype: 'container',
            flex: 7,
            itemId: 'filterFormContainer',
            layout: {
                type: 'hbox',
                align: 'stretch'
            },
            items: [
                {
                    xtype: 'container',
                    flex: 2,
                    margin: 10,
                    items: [
                        {
                            xtype: 'daterangepicker',
                            bind: {
                                values: '{filter}'
                            },
                            padding: '10 0 10 0',
                            fieldLabel: '{{Period}}'
                        },
                        {
                            xtype: 'combobox',
                            bind: {
                                value: '{filter.servicegroup_name}'
                            },
                            height: 80,
                            padding: '10 0 10 0',
                            fieldLabel: '{{Servicegroup}}',
                            name: 'servicegroup_name',
                            displayField: 'display_name',
                            minChars: 1,
                            multiSelect: true,
                            listeners: {
                                afterrender: 'onTextareafieldAfterRender2'
                            }
                        },
                        {
                            xtype: 'combobox',
                            bind: {
                                value: '{filter.state_type}'
                            },
                            height: 80,
                            padding: '10 0 10 0',
                            fieldLabel: '{{State Type}}',
                            name: 'state_type',
                            anyMatch: true,
                            displayField: 'label',
                            store: 'StateTypeFilter',
                            valueField: 'id',
                            multiSelect: true
                        },
                        {
                            xtype: 'textareafield',
                            bind: {
                                value: '{filter.details}'
                            },
                            padding: '10 0 10 0',
                            fieldLabel: '{{Details}}',
                            name: 'details'
                        }
                    ]
                },
                {
                    xtype: 'container',
                    flex: 2,
                    margin: 10,
                    items: [
                        {
                            xtype: 'combobox',
                            bind: {
                                value: '{filter.class}'
                            },
                            padding: '10 0 10 0',
                            fieldLabel: '{{Class}}',
                            name: 'class',
                            displayField: 'label',
                            forceSelection: true,
                            store: 'ClassFilter',
                            valueField: 'value',
                            multiSelect: true
                        },
                        {
                            xtype: 'combobox',
                            bind: {
                                value: '{filter.host_name}'
                            },
                            height: 80,
                            padding: '10 0 10 0',
                            shrinkWrap: 3,
                            fieldLabel: '{{Host Name}}',
                            name: 'host_name',
                            displayField: 'display_name',
                            minChars: 1,
                            multiSelect: true,
                            listeners: {
                                afterrender: 'onComboboxAfterRender'
                            }
                        },
                        {
                            xtype: 'combobox',
                            bind: {
                                value: '{filter.hostgroup_name}'
                            },
                            height: 80,
                            padding: '10 0 10 0',
                            fieldLabel: '{{Hostgroup}}',
                            name: 'hostgroup_name',
                            displayField: 'display_name',
                            minChars: 1,
                            multiSelect: true,
                            listeners: {
                                afterrender: 'onTextareafieldAfterRender'
                            }
                        },
                        {
                            xtype: 'combobox',
                            bind: {
                                value: '{filter.service_description}'
                            },
                            height: 80,
                            padding: '10 0 10 0',
                            fieldLabel: '{{Service Description}}',
                            name: 'service_description',
                            displayField: 'display_name',
                            minChars: 1,
                            multiSelect: true,
                            listeners: {
                                afterrender: 'onTextareafieldAfterRender1'
                            }
                        }
                    ]
                },
                {
                    xtype: 'container',
                    flex: 1,
                    margin: 10,
                    layout: {
                        type: 'vbox',
                        align: 'stretch'
                    },
                    items: [
                        {
                            xtype: 'label',
                            padding: '0 0 10 0',
                            style: 'text-align: center;',
                            width: '100%',
                            text: '{{Status}}'
                        },
                        {
                            xtype: 'checkboxfield',
                            handler: function(checkbox, checked) {
                                Ext.ComponentQuery.query("#statusGroup").forEach(function(el) {
                                    el.items.items.forEach(function(input) {
                                        input.setValue(checked);
                                    });
                                });
                            },
                            width: '100%',
                            fieldLabel: 'Label',
                            hideLabel: true,
                            name: 'status',
                            boxLabel: '{{Select all}}',
                            inputValue: 'all'
                        },
                        {
                            xtype: 'checkboxgroup',
                            flex: 1,
                            formBind: false,
                            dock: 'top',
                            itemId: 'statusGroup',
                            vertical: true,
                            layout: {
                                type: 'vbox',
                                align: 'stretch'
                            },
                            items: [
                                {
                                    xtype: 'checkboxfield',
                                    cls: 'display_status d0',
                                    width: '100%',
                                    hideLabel: true,
                                    name: 'status',
                                    boxLabel: '{{Ok}}',
                                    inputValue: '0'
                                },
                                {
                                    xtype: 'checkboxfield',
                                    cls: 'display_status d1',
                                    width: '100%',
                                    hideLabel: true,
                                    name: 'status',
                                    boxLabel: '{{Scheduled downtime}}',
                                    inputValue: '1'
                                },
                                {
                                    xtype: 'checkboxfield',
                                    cls: 'display_status d2',
                                    width: '100%',
                                    hideLabel: true,
                                    name: 'status',
                                    boxLabel: '{{Acknowledged}}',
                                    inputValue: '2'
                                },
                                {
                                    xtype: 'checkboxfield',
                                    cls: 'display_status d3',
                                    width: '100%',
                                    hideLabel: true,
                                    name: 'status',
                                    boxLabel: '{{Flapping}}',
                                    inputValue: '3'
                                },
                                {
                                    xtype: 'checkboxfield',
                                    cls: 'display_status d4',
                                    width: '100%',
                                    hideLabel: true,
                                    name: 'status',
                                    boxLabel: '{{Warning}}',
                                    inputValue: '4'
                                },
                                {
                                    xtype: 'checkboxfield',
                                    cls: 'display_status d5',
                                    width: '100%',
                                    hideLabel: true,
                                    name: 'status',
                                    boxLabel: '{{Unknown}}',
                                    inputValue: '5'
                                },
                                {
                                    xtype: 'checkboxfield',
                                    cls: 'display_status d6',
                                    width: '100%',
                                    hideLabel: true,
                                    name: 'status',
                                    boxLabel: '{{Critical}}',
                                    inputValue: '6'
                                },
                                {
                                    xtype: 'checkboxfield',
                                    cls: 'display_status d7',
                                    width: '100%',
                                    hideLabel: true,
                                    name: 'status',
                                    boxLabel: '{{Unreachable}}',
                                    inputValue: '7'
                                },
                                {
                                    xtype: 'checkboxfield',
                                    cls: 'display_status d8',
                                    width: '100%',
                                    hideLabel: true,
                                    name: 'status',
                                    boxLabel: '{{Down}}',
                                    inputValue: '8'
                                }
                            ],
                            listeners: {
                                afterrender: 'onStatusGroupAfterRender'
                            }
                        }
                    ]
                }
            ]
        },
        {
            xtype: 'container',
            flex: 1,
            padding: '0 30 0 0',
            layout: {
                type: 'hbox',
                align: 'middle',
                pack: 'end'
            },
            items: [
                {
                    xtype: 'button',
                    handler: function(button, e) {
                        Ext.ComponentQuery.query("#filterPanel").forEach(function(panel) { panel.hide(); });
                    },
                    margin: '0 5 0 0',
                    ui: 'default-toolbar-small',
                    width: 85,
                    text: '{{Cancel}}'
                },
                {
                    xtype: 'button',
                    handler: function(button, e) {
                        function reduceEl(result, x) {
                            if (x.items) {
                                return result.concat(x.items.items.reduce(reduceEl, []));
                            }
                            return result.concat(
                            (x.getValue && x.getValue() && x.getValue() !== "" && x.getValue().length > 0 && ({ name: x.name, value: x.getValue() }))
                            || (x.getPickerValue && x.getPickerValue() && [
                            { name: "start_time", value: ajustDate(x.getPickerValue().startDateTimeYmdHis) },
                            { name: "end_time", value: ajustDate(x.getPickerValue().endDateTimeYmdHis) }
                            ])
                            || (x.name === "status") && x.getValue() && x.inputValue !== "all" && result.reduce(function(acc, res) {
                                if (res.name !== "state") return acc;
                                return ({ name: "state", value: res.value.concat(x.inputValue) });
                            }, {name: "state", value: [x.inputValue]})
                                || []
                                );
                            }

                            function ajustDate(x) {
                                return Math.floor(new Date(x).getTime() / 1000);
                            }

                            var values = Ext.ComponentQuery.query("#filterFormContainer").reduce(reduceEl, [])
                            .reduce(function(res, x) {
                                var fresh = {};
                                fresh[x.name] = x.value;
                                return Ext.apply({}, fresh, res);
                            }, {});
                                var gridview = Ext.ComponentQuery.query("#gridview");
                                var filterpanel = Ext.ComponentQuery.query("#filterPanel");

                                var exec = parent.zip(function(grid, panel) {
                                    grid.getViewModel().set("filter", values);
                                    grid.controller.loadData();
                                    panel.hide();
                                });

                                exec(gridview, filterpanel);
                    },
                    margin: '0 0 0 5',
                    ui: 'default-small',
                    width: 85,
                    text: '{{Ok}}'
                }
            ]
        }
    ],

    onTextareafieldAfterRender2: function(component, eOpts) {
        this.controller.createComboStore(component, "servicegroup_name");
    },

    onComboboxAfterRender: function(component, eOpts) {
        this.controller.createComboStore(component, "host_name");
    },

    onTextareafieldAfterRender: function(component, eOpts) {
        this.controller.createComboStore(component, "hostgroup_name");
    },

    onTextareafieldAfterRender1: function(component, eOpts) {
        this.controller.createComboStore(component, "service_description");
    },

    onStatusGroupAfterRender: function(component, eOpts) {
        var state = this.getViewModel().data.filter.state;

        var action = parent.zip(function(color, checkbox) {
            checkbox.el.dom.querySelector(".x-form-cb-label-after").style.backgroundColor = color.get("color");
            if (state.some(function(s) { return s === checkbox.inputValue; })) {
                checkbox.setValue(true);
            }
        });

        var colors = Ext.getStore("Colors").data.items;

        var checkboxs = component.query("checkboxfield");

        action(colors, checkboxs);
    }

});